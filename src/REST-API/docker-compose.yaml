services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: on-failure
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    networks:
      - app-network

  app:
    build: .
    restart: "on-failure"
    container_name: app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: